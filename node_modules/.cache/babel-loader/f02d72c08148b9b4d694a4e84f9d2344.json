{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/jorge/Downloads/react-store-3f669c84a8ff316526ad9c37a312683b5cd1283e/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jorge/Downloads/react-store-3f669c84a8ff316526ad9c37a312683b5cd1283e/src/components/SideCart.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: fixed;\\n  top: 60px;\\n  right: 0;\\n  width: 100%;\\n  height: 100%;\\n  background: var(--mainGrey);\\n  z-index: 1;\\n  transform: \", \";\\n  border-left: 4px solid var(--primaryColor);\\n  transition: var(--mainTransition);\\n  @media (min-width: 576px) {\\n    width: 20rem;\\n  }\\n  overflow: scroll;\\n  padding: 2rem;\\n  ul {\\n    padding: 0 !important;\\n  }\\n  .cart-item {\\n    list-style-type: none;\\n  }\\n\\n  .cart-link-page {\\n    font-size: 12px;\\n    padding: 0.5rem 0.5rem;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { ProductConsumer } from '../context';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { formatPrice } from '../context/formatPrice';\nexport default function SideCart() {\n  return React.createElement(ProductConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, function (value) {\n    var cartOpen = value.cartOpen,\n        closeCart = value.closeCart,\n        cart = value.cart,\n        cartTotal = value.cartTotal;\n    return React.createElement(CartWrapper, {\n      show: cartOpen,\n      onClick: closeCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, cart.map(function (item) {\n      return React.createElement(\"li\", {\n        key: item.id,\n        className: \"cart-item mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        width: \"35\",\n        src: item.image,\n        alt: \"cart item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"text-uppercase\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, formatPrice(item.price)), React.createElement(\"h6\", {\n        className: \"text-uppercase\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, item.title), React.createElement(\"h6\", {\n        className: \"text-title text-capitalize\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Quantidade: \", item.count)));\n    })), React.createElement(\"h4\", {\n      className: \"text-capitalize\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Total: \", formatPrice(cartTotal)), React.createElement(\"div\", {\n      className: \"text-center my-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/carrinho\",\n      className: \"main-link cart-link-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"P\\xE1gina do carrinho\")));\n  });\n}\nvar CartWrapper = styled.div(_templateObject(), function (props) {\n  return props.show ? 'translateX(0)' : 'translateX(100%)';\n});","map":{"version":3,"sources":["/Users/jorge/Downloads/react-store-3f669c84a8ff316526ad9c37a312683b5cd1283e/src/components/SideCart.js"],"names":["React","ProductConsumer","styled","Link","formatPrice","SideCart","value","cartOpen","closeCart","cart","cartTotal","map","item","id","image","price","title","count","CartWrapper","div","props","show"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,eAAe,SAASC,QAAT,GAAoB;AACjC,SACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAAAC,KAAK,EAAI;AAAA,QACAC,QADA,GACyCD,KADzC,CACAC,QADA;AAAA,QACUC,SADV,GACyCF,KADzC,CACUE,SADV;AAAA,QACqBC,IADrB,GACyCH,KADzC,CACqBG,IADrB;AAAA,QAC2BC,SAD3B,GACyCJ,KADzC,CAC2BI,SAD3B;AAER,WACE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAEH,QAAnB;AAA6B,MAAA,OAAO,EAAEC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,IAAI,CAACE,GAAL,CAAS,UAAAC,IAAI,EAAI;AAChB,aACE;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAkB,QAAA,SAAS,EAAC,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAC,IAAX;AAAgB,QAAA,GAAG,EAAED,IAAI,CAACE,KAA1B;AAAiC,QAAA,GAAG,EAAC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGV,WAAW,CAACQ,IAAI,CAACG,KAAN,CADd,CADF,EAIE;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgCH,IAAI,CAACI,KAArC,CAJF,EAKE;AAAI,QAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACeJ,IAAI,CAACK,KADpB,CALF,CAFF,CADF;AAcD,KAfA,CADH,CADF,EAmBE;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAwCb,WAAW,CAACM,SAAD,CAAnD,CAnBF,EAoBE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,WAAT;AAAqB,MAAA,SAAS,EAAC,0BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CApBF,CADF;AA4BD,GA/BH,CADF;AAmCD;AAED,IAAMQ,WAAW,GAAGhB,MAAM,CAACiB,GAAV,oBAQF,UAAAC,KAAK;AAAA,SAAKA,KAAK,CAACC,IAAN,GAAa,eAAb,GAA+B,kBAApC;AAAA,CARH,CAAjB","sourcesContent":["import React from 'react';\nimport { ProductConsumer } from '../context';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { formatPrice } from '../context/formatPrice';\nexport default function SideCart() {\n  return (\n    <ProductConsumer>\n      {value => {\n        const { cartOpen, closeCart, cart, cartTotal } = value;\n        return (\n          <CartWrapper show={cartOpen} onClick={closeCart}>\n            <ul>\n              {cart.map(item => {\n                return (\n                  <li key={item.id} className='cart-item mb-4'>\n                    <img width='35' src={item.image} alt='cart item' />\n                    <div className='mt-3'>\n                      <h6 className='text-uppercase'>\n                        {formatPrice(item.price)}\n                      </h6>\n                      <h6 className='text-uppercase'>{item.title}</h6>\n                      <h6 className='text-title text-capitalize'>\n                        Quantidade: {item.count}\n                      </h6>\n                    </div>\n                  </li>\n                );\n              })}\n            </ul>\n            <h4 className='text-capitalize'>Total: {formatPrice(cartTotal)}</h4>\n            <div className='text-center my-5'>\n              <Link to='/carrinho' className='main-link cart-link-page'>\n                PÃ¡gina do carrinho\n              </Link>\n            </div>\n          </CartWrapper>\n        );\n      }}\n    </ProductConsumer>\n  );\n}\n\nconst CartWrapper = styled.div`\n  position: fixed;\n  top: 60px;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  background: var(--mainGrey);\n  z-index: 1;\n  transform: ${props => (props.show ? 'translateX(0)' : 'translateX(100%)')};\n  border-left: 4px solid var(--primaryColor);\n  transition: var(--mainTransition);\n  @media (min-width: 576px) {\n    width: 20rem;\n  }\n  overflow: scroll;\n  padding: 2rem;\n  ul {\n    padding: 0 !important;\n  }\n  .cart-item {\n    list-style-type: none;\n  }\n\n  .cart-link-page {\n    font-size: 12px;\n    padding: 0.5rem 0.5rem;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}