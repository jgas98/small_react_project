{"ast":null,"code":"import _classCallCheck from \"/Users/jorge/Downloads/react-store-3f669c84a8ff316526ad9c37a312683b5cd1283e/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jorge/Downloads/react-store-3f669c84a8ff316526ad9c37a312683b5cd1283e/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jorge/Downloads/react-store-3f669c84a8ff316526ad9c37a312683b5cd1283e/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jorge/Downloads/react-store-3f669c84a8ff316526ad9c37a312683b5cd1283e/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jorge/Downloads/react-store-3f669c84a8ff316526ad9c37a312683b5cd1283e/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jorge/Downloads/react-store-3f669c84a8ff316526ad9c37a312683b5cd1283e/src/components/CartPage/PayPalBtn.js\";\nimport React from 'react';\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MyApp, _React$Component);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var onSuccess = function onSuccess(payment) {\n        // Congratulation, it came here means everything's fine!\n        console.log('O pagamento foi efetuado com sucesso!', payment); // clear cart\n\n        _this.props.clearCart(); // homepage\n\n\n        _this.props.history.push('/'); // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\n\n      };\n\n      var onCancel = function onCancel(data) {\n        // User pressed \"cancel\" or close Paypal's popup!\n        console.log('O pagamento foi cencelado!', data); // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\n      };\n\n      var onError = function onError(err) {\n        // The main Paypal's script cannot be loaded or somethings block the loading of that script!\n        console.log('Error!', err); // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n        // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n      };\n\n      var env = 'sandbox'; // you can set here to 'production' for production\n\n      var currency = 'BRL'; // or you can set this value from your props or state\n      // let total = 1; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\n      // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\n\n      var client = {\n        sandbox: process.env.REACT_APP_SANDBOX_ID,\n        production: 'YOUR-PRODUCTION-APP-ID'\n      }; // In order to get production's app-ID, you will have to send your app to Paypal for approval first\n      // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\n      //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\n      // For production app-ID:\n      //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\n      // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\n\n      return React.createElement(PaypalExpressBtn, {\n        env: env,\n        client: client,\n        currency: currency,\n        total: this.props.cartTotal,\n        onError: onError,\n        onSuccess: onSuccess,\n        onCancel: onCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return MyApp;\n}(React.Component);\n\nexport { MyApp as default };","map":{"version":3,"sources":["/Users/jorge/Downloads/react-store-3f669c84a8ff316526ad9c37a312683b5cd1283e/src/components/CartPage/PayPalBtn.js"],"names":["React","PaypalExpressBtn","MyApp","onSuccess","payment","console","log","props","clearCart","history","push","onCancel","data","onError","err","env","currency","client","sandbox","process","REACT_APP_SANDBOX_ID","production","cartTotal","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;;IAEqBC,K;;;;;;;;;;;;;6BACV;AAAA;;AACP,UAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,OAAO,EAAI;AAC3B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDF,OAArD,EAF2B,CAG3B;;AACA,QAAA,KAAI,CAACG,KAAL,CAAWC,SAAX,GAJ2B,CAK3B;;;AACA,QAAA,KAAI,CAACD,KAAL,CAAWE,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB,EAN2B,CAO3B;;AACD,OARD;;AAUA,UAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,IAAI,EAAI;AACvB;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CM,IAA1C,EAFuB,CAGvB;AACD,OAJD;;AAMA,UAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,GAAG,EAAI;AACrB;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBQ,GAAtB,EAFqB,CAGrB;AACA;AACD,OALD;;AAOA,UAAIC,GAAG,GAAG,SAAV,CAxBO,CAwBc;;AACrB,UAAIC,QAAQ,GAAG,KAAf,CAzBO,CAyBe;AACtB;AACA;;AAEA,UAAMC,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAEC,OAAO,CAACJ,GAAR,CAAYK,oBADR;AAEbC,QAAAA,UAAU,EAAE;AAFC,OAAf,CA7BO,CAiCP;AACA;AACA;AACA;AACA;AAEA;;AACA,aACE,oBAAC,gBAAD;AACE,QAAA,GAAG,EAAEN,GADP;AAEE,QAAA,MAAM,EAAEE,MAFV;AAGE,QAAA,QAAQ,EAAED,QAHZ;AAIE,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWe,SAJpB;AAKE,QAAA,OAAO,EAAET,OALX;AAME,QAAA,SAAS,EAAEV,SANb;AAOE,QAAA,QAAQ,EAAEQ,QAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAWD;;;;EApDgCX,KAAK,CAACuB,S;;SAApBrB,K","sourcesContent":["import React from 'react';\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\n\nexport default class MyApp extends React.Component {\n  render() {\n    const onSuccess = payment => {\n      // Congratulation, it came here means everything's fine!\n      console.log('O pagamento foi efetuado com sucesso!', payment);\n      // clear cart\n      this.props.clearCart();\n      // homepage\n      this.props.history.push('/');\n      // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\n    };\n\n    const onCancel = data => {\n      // User pressed \"cancel\" or close Paypal's popup!\n      console.log('O pagamento foi cencelado!', data);\n      // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\n    };\n\n    const onError = err => {\n      // The main Paypal's script cannot be loaded or somethings block the loading of that script!\n      console.log('Error!', err);\n      // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n      // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n    };\n\n    let env = 'sandbox'; // you can set here to 'production' for production\n    let currency = 'BRL'; // or you can set this value from your props or state\n    // let total = 1; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\n    // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\n\n    const client = {\n      sandbox: process.env.REACT_APP_SANDBOX_ID,\n      production: 'YOUR-PRODUCTION-APP-ID'\n    };\n    // In order to get production's app-ID, you will have to send your app to Paypal for approval first\n    // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\n    //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\n    // For production app-ID:\n    //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\n\n    // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\n    return (\n      <PaypalExpressBtn\n        env={env}\n        client={client}\n        currency={currency}\n        total={this.props.cartTotal}\n        onError={onError}\n        onSuccess={onSuccess}\n        onCancel={onCancel}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}